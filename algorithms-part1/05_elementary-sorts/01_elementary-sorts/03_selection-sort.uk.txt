Перший елементарний метод сортування який ми
будемо розглядати – це простий метод, відомий як сортування вибором. 
Основна ідея цього алгоритму така, візьмемо несортований масив і будемо використовувати
ігрові карти як приклад. Під час і-тої ітерації ми проходимо через масив для того, щоб знайти
найменший елемент, в цьому випадку 2-ка є найменшим. Потім ми обміняємо
її з першим елементом в масиві, це і буде нашим кроком. Сортування
вибором базується на ідеї повторення цього кроку. Отже, основою методу
сортування вибором є те, щоб під час і-тої ітерації знайти найменший елемент з тих, що
залишилися справа від 'і', тобто з індексом, більшим за індекс 'і', та обміняти його з 'і'. Починаємо
з 'і' з лівого краю масиву та елементами, що залишилися
справа. При скануванні знаходимо найменший елемент, 2-ку, третю карту
з кінця, та обмінюємо її з першим елементом. Це і був наш перший крок. Тепер частина масиву зліва від 'і', вже відсортована, і ми продовжуємо. Далі найменший
елемент – 3-ка. Обмінюємо її з 'i', збільшуємо 'i' на 1. Зараз 2-ка та 3-ка стоять
по порядку, і ми продовжуємо. Знаходимо найменший елемент, 4-ку. Обмінюємо її з 'i',
збільшуємо 'i' на 1. Знаходимо найменший елемент, 5-ку, обмінюємо її з 'i', збільшуємо 'i' на 1.
Заходимо найменший елемент, обмінюємо його з 'i', збільшуємо 'i' на 1. Кожний раз коли ми проходимо через елементи, що залишилися, ми знаходимо найменший елемент.
Коли він знайдений, все, що нам залишається обміняти дві карти. Це дві основні властивості сортування
вибором. 8-ка найменший елемент, міняємо її. Тепер ми знаємо, подальші елементи
вже відсортовано, але програма не знає цього, тому вона має дійти до того, що 'i' = 'n' і
поміняти карту саму на себе, і далі робить те ж саме для останнього елементу.
Після цього процесу ми знаємо, що весь масив відсортовано. Тож, один з
способів зрозуміти, як працює алгоритм – розглянути інваріанти.
У сортуванні вибором маємо укажчик, нашу змінну 'i', що проходить
по масиву зліва направо. У цій презентації він зображений
червоною стрілкою. Наші інваріанти – всі елементи
зліва від стрілки незмінні і знаходяться у порядку зростання. Справа від стрілки
немає елементу меншого за будь-який елемент зліва від неї. Це наші початкові
налаштування. Алгоритм додержується цих інваріантів знаходячи
найменший елемент справа обмінюючи його з наступним. Отже, код
імплементує інваріанти. Щоб посунути укажчик, ми збільшуємо 'i' на 1.
Тепер інваріант може бути порушено, тому ми маємо це виправити. Він може бути
порушений тому, що елемент справа від укажчика менший за елемент,
на який показує укажчик. Все, що нам потрібно зробити –
ввести індекс на мінімальному елементі і обміняти його з 'i'. Коли ж ми його обміняємо,
наш інваріант буде збережено. Після цього жодний елемент зліва від
укажчика не буде змінюватися. і жоден елемент справа не буде
меншим за укажчик. З цього випливає наш код для сортування
вибором. Ми визначаємо довжину масиву, 'n'. Далі маємо
цикл for, що перебирає кожний елемент у масиві, маємо змінну 'min' – індекс найменшого елементу справа від укажчика 'i'. Також маємо внутрішній цикл for з індексом 'j',якщо він знаходить
менший елемент, то перепризначує 'min', і коли ми перевірили усі елементи справа
від 'i' ми обмінюємо найменший елемент з 'i'. Це повна реалізація алгоритму
сортування вибором. Тепер легко вивести математичну модель "ціни" алгоритму
сортування вибором і твердження, що його описує. Можна стверджувати, що сортування
вибором робить приблизно N квадрат поділене на 2 порівнянь та рівно N обмінів. Просто
подивившись на цю схему алгоритму сортування вибором, можна довести
це твердження. У цій діаграмі чорні елементи – це ті, які ми
перевіряємо для того, щоб знайти мінімальний елемент, з мінімальним червоним
елементом. Сірі елементи не перевіряються, вони на своїх фінальних позиціях.
Можна побачити, що в цілому це буде квадрат зі стороною N, половина
елементів квадрата буде чорною або N квадрат навпіл. Точною формулою 
для знаходження кількості порівнянь буде (N - 1) + (N-2), і так далі. Для кожного
N-ого значення змінної 'і' робиться один обмін і це "ціна"
виражена в кількості обмінів. Що цікаве можна сказати
про сортування вибором – те, що не має значення у якому порядку стоять елементи
у початковому масиві. Сортування вибором буде працювати квадратичний час, тому що воно буде
пробігати через увесь масив для того, щоб знайти мінімум. Ще одна властивість в тому, що ви не 
можете провести обмін меншою кількістю даних, тому що сортування вибором робить лінійну
кількість обмінів. Кожний елемент ставиться на фінальну позицію за допомогою лише
одного обміну. Подивимось на анімацію сортування вибором. Можна бачити укажчик,
що рухається справа наліво, кожний раз, коли він знаходить найменший елемент
справа, він ставить його на потрібну позицію. Для сортування вибором не
має значення чи масив частково відсортований. Навіть якщо масив повністю відсортований,
алгоритм все ще має проходити до кінця, через весь масив для знаходження мінімального
елементу. Це було сортування вибором, наш перший елементарний
метод сортування.