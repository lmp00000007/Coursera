はじめまして プリンストン大コンピュータ・サイエンス教授の
ボブ・セジウイックです この「アルゴリズム」のオンラインコースは
プリンストン大のケヴィン・ウェインと共に開発しました まず なぜアルゴリズムを学習するのかを
簡単に説明し このコースに必要なリソースを お話しします このコースは 「アルゴリズムとは何か？」を学ぶ
中級レベルのコースです 実際の場面で使える
プログラミングや問題解決の手順を中心に 特に次の２点に重点を置いて学びます 問題を解決する手順である「アルゴリズム」と 問題に関するデータを格納する「データ構造」で
これはアルゴリズムと切り離すことはできません この２つの基本的なトピックを
２つのパートに分けて説明します パート１ではデータタイプや
ソート（並べ替え）やサーチ（検索）を学びます ここで紹介する様々なデータ構造とアルゴリズムは スタック、キュー、バッグ、プラオリティキューなどの
理解に不可欠です 次に定番の並べ替えに使われる
ソート・アルゴリズム -- クイックソート、マージソート、ヒープソート、
基数ソートを勉強します また、定番のサーチアルゴリズム --
二分探索木や赤黒木やハッシュテーブルを紹介します パート２では さらに高度なアルゴリズム -- グラフやグラフ探索のアルゴリズムや
最小全域木と 最短経路アルゴリズムを検討します。文字列を処理するアルゴリズムについても検討し、 正規表現やデータ圧縮などを扱います。さらに、いくつかの複雑なアルゴリズムについても取り扱い、 コースの前半で開発した基本的なアルゴリズムを利用するものになっています。
さて、なぜ アルゴリズムを学ぶ必要があるのでしょうか？その影響はとても広くさまざま分野に及んでいます。 インターネットから生物学、商用コンピューティング、コンピュータグラフィック、 セキュリティ、マルチメディア、ソーシャルネットワーク、科学利用まで、アルゴリズムは身の回りのいたるところにあるのです。 映画やビデオゲーム、粒子衝突シミュレーションに利用され、 ゲノムの研究にも利用され、他のあらゆる分野に適用されています。 アルゴリズムを学ぶひとつの重要な理由は、このように影響が 非常に広い分野に及んでいるためです。アルゴリズムの研究自身もとても面白いもので、 古くからの起源を持っています。最初のアルゴリズムは紀元前300年にさかのぼり、 ユークリッドの時代です。アルゴリズムの概念が厳密に定式化されたのは、 ここ、プリンストンで、チャーチとチューリングによって、1930年代に行われました。しかし、 私たちが検討するアルゴリズムの大部分は、比較的最近発見されたものです。実際、 そのうちのいくつかは、このコースや類似のコースの学生によって発見されたものです。 まだ多くのアルゴリズムがあなた方学生によって発見されるのを待っているのです。 アルゴリズムを学ぶ一番の理由は、他の方法では対応することができない問題の解決を可能にすることです。 最初の講義でその一例としてお話しするのは、 ネットワークコネクティビティの問題です。この問題は、ペアとしてつながっている要素の集合に対して、 その接続をたどって、ある要素から他の要素へと通じる経路があるかどうかを確かめるものです。 この例からわかるように、 そのような経路が存在するかどうかは明らかではありません。このような場合、コンピュータプログラムが必要になり、 実際、そのための効率的なアルゴリズム必要になります。この場合は、答えは そのような経路が存在することになります。アルゴリズムを学ぶもうひとつの理由は 思考実験となるためです。アルゴリズムはとても面白い研究対象です。ドン・クヌースは、 アルゴリズムに関するいくつかの本の著者で、この分野の開拓者の一人ですが、このように言っています。 「アルゴリズムは信頼されていると思われていなければならない。」 アルゴリズムをただ利用するだけのものと考えてはいけません。また、フランシス・サリバンはこのようにも言っています。 「偉大なアルゴリズムは計算の詩である。」韻文詩のように 簡潔で、難解で、濃密で、神秘的でさえあります。しかし、一度その鍵を開けることができれば、 計算のいくつかの面に眩い新しい光を当てることになるのです。
アルゴリズムは 思考実験としても面白いものです。多くの人々がアルゴリズムを研究するもうひとつの理由、そして、皆さんの多くの人もそうだと思いますが、 それは、良いアルゴリズム、効率的なアルゴリズム、 良いデータ構造を理解し、優秀なプログラマになるためです。リナス・ トーバルズは、Linuxを開発したのですが、こう言っています。
悪いプログラマと良いプログラマの違いは、コードやデータ構造の どちらに重きを置いているかだと。 駄目なプログラマはコードばかりを気にしていて、優秀なプログラマは データ構造と、データ構造とコードの関係を大事にしている。さらに私は それらを扱うアルゴリズムを付け加えたいと思う。
もう一人のコンピュータサイエンス分野のパイオニアの、二クラウス・ワースは、 アルゴリズム+データ構造=プログラムと呼ばれている有名な本を書いている。 [咳]今日、アルゴリズムを研究する別な理由は、 アルゴリズムが自然を理解するための共通言語であるためです。
アルゴリズムは計算モデルであり、 科学的な疑問に対して、アルゴリズム的なモデルが数理モデルに置き換わってきているのです。 20世紀は、数理科学者が数理モデルを開発し、 自然現象を理解しようとしていました。しかし、まもなく、このような数理モデルでは、 それを解決することが困難であるということが明らかになってきました。解答を出すのが困難なのは、 自然現象に対する仮定を検証する必要があるためです。そのため、今日では数多くの人々が コンピュテーショナルモデルを作り、それを使って 自然界で何が起きているのかシミュレーションし、より深い理解をしようとしているのです。アルゴリズムは このプロセスの中で極めて重要な役割を果たしているのです。私たちも このコースの中でいくつかの例を見ていくことにしましょう。もう一つの大切な理由は、効果、 つまり、アルゴリズムとデータ構造の効率的な使い方を知っていれば、 テクノロジー業界では就職面接でよりよいチャンスを得ることができることです。 このようにアルゴリズムを学ぶのには沢山の理由があるのです。 アルゴリズムの影響は広く、至る所にいきわたっており、古い起源を持ち、 最近の新しい機会も提供してくれます。他の方法では対処することができない問題を解決することができ、 思考実験を通じて優秀なプログラマになることができるのです。 世界中の生命の秘密の鍵を解き、 楽しみや得になるものなのです。実際、プログラマは尋ねることでしょう。 なぜ他のことを学ぶのかと。そう、他のことを学ぶのにもそれぞれ多くの理由がありますが、 アルゴリズムを勉強しない理由はないと、自身を持って言うことができます。[咳] このコースのために、私たちは2つの材料を用意したので、その話をしましょう。 コンテンツに入る前に、よく理解しておくようにしてください。 これは、出版モデルでケヴィン・ウェインと私が開発し、長年使ってきたものです。 このコースで提供する予定の講義のようなものを支援するとても効率的な方法だと思っています。 最後には、このコースでは必ずしも必要ではありませんが、テキストブックもあります。 伝統的なテキストブックでコースのトピックを広くカバーしています。 講義で紹介できるトピックでは触れていないものも含んでいます。 さらに、テキストをサポートする無料のオンライン教材もあり、ブックサイトと呼んでいます。 テキストやブックサイトで講義のスライドを見ることができます。しかし、より重要なのは、 コードや練習問題、多くの情報がそこにはあるのです。事実、 本にあるものの、約10倍にもなり、コンテンツの要約も含んでいます。したがって、 このコースの受講中は、頻繁にブックサイトを参照し、オンラインでの作業をすることになります。 受講条件についての質問も良く受けます。 このコースではプログラミングができることを前提としており、基本的なループ処理や配列、 関数について知っていることが必要です。オブジェクト指向プログラミングや再帰についての知識が必要となるときもあります。 Javaを使いますが、Javaについて詳しく触れることはしません。 例示のためのプログラミング言語として使用するだけです。
数学も使いますが、発展的なものではありません。 このコースの前提としている事項を復習しておきたい場合は、 本のセクション1.1と1.2を見ておくと良いでしょう。 ブックサイトでも、テキストブックでもどちらでもよいです。詳しく復習しておきたい場合には、 完全なテキストも用意しています。“Introduction to Programming in Java: An Interdisciplinary Approach"です。同様に、ブックサイトとテキストブックがあります。しかし、 ボトムラインは、プログラムが書けることであり、準備ができているかどうか 確認するには、自分のコンピュータでプログラムを書いてみることで、 ブックサイトに載っているプログラミングモデルを使ってみるといいでしょう。さらに詳しい情報を提供する予定です。 それで宿題にも対応できるようになるでしょう。プログラミング環境は好きなものを 使うこともできます。そのほうがよければそれでよいですし、私たちのものをダウンロードして使うこともできます。 ウェブサイトに利用方法を載せてあります。