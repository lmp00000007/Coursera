Здравствуйте! Я - Боб Седжвик, профессор 
информатики из Принстона. Это наш онлайн курс "Алгоритмы", разработанный
мной и Кевином Уэйном здесь в Принстоне. Мы начнем с обсуждения того,
зачем изучать алгоритмы и немного поговорим о ресурсах,
которые необходимы для прохождения этого курса. Итак, что это за курс?
Это обзорный курс среднего уровня по алгоритмам. Мы сконцентрируемся 
на программировании и решении задач в контексте реальных приложений, и наше
внимание будет сосредоточено на двух вещах: на алгоритмах, которые являются способами решения
задач и на структурах данных, которые содержат информацию, связанную с задачей,
и тесно сотрудничают с алгоритмами. Это - базовые темы, которые 
мы рассмотрим в первой и второй частях курса. Первая часть - это сортировка
типов данных и поиск. Мы рассмотрим многочисленные структуры данных и алгоритмы,
которые являются базовыми для всех методов, включая стеки, очереди, мультимножества
и приоритетные очереди. Затем мы рассмотрим классические алгоритмы сортировки, располагающие
вещи по порядку. Это быстрая сортировка, сортировка слиянием, пирамидальная и поразрядная сортировки.
Также рассмотрим классические методы поиска. Включая двоичные деревья поиска,
красно-черные двоичные деревья поиска и хеш-таблицы. Вторая часть курса
о более продвинутых алгоритмах: алгоритмы на графах, классические алгоритмы
поиска на графах, минимальное остовное дерево, алгоритмы кратчайшего пути, алгоритмы
обработки строк, включая регулярные выражения и сжатие данных. И затем несколько
продвинутых алгоритмов, которые используют базовые алгоритмы, разбираемые в курсе.
Итак, зачем изучать алгоритмы?
Их вклад очень обширен. От интернета до биологии, коммерческих 
вычислительных систем, компьютерной графики, безопасности, мультимедиа, социальных сетей
и научных применений, алгоритмы везде вокруг нас. Они используются для фильмов
и видео игр, для симуляции столкновения частиц, они используются для изучения 
генома и других задач. Так что, одна из важных причин 
изучать алгоритмы - это то, что их влияние очень широко. Алгоритмы
также интересны для изучения, так как имеют древние корни. Первый
изучаемый алгоритм уходит корнями к 300 году до нашей эры.
Концепция алгоритма была формализована здесь, в Принстоне, Чёрчем и Тьюрингом в 1930-е.
Но большинство алгоритмов, которые мы рассмотрим, были открыты
в последние десятилетия. Кстати, некоторые были открыты студентами подобных курсов.
Существует множество других алгоритмов, ожидающих своего открытия
такими же студентами, как вы. Основная причина изучения алгоритмов — быть способными
решать задачи, которые иначе не решить. Например, во время 
первой лекции, мы будем говорить о задаче соединения сети:
дан большой набор элементов, которые соединены друг с другом попарно.
Можно ли попасть от одного элемента на другой по данной схеме? Из примера не очевидно, существует ли такой путь.
Нужна компьютерная программа. На самом деле, нужен эффективный алгоритм.
Ответ на эту задачу: такой путь есть. Другой причиной изучать
алгоритмы является интеллектуальное стимулирование. Алгоритмы - это очень
интересные объекты для изучения. Дон Кнут, написавший несколько книг по алгоритмам
будучи пионером в этой области, сказал, что алгоритм должен выглядеть правдоподобно.
Вы не можете просто думать об алгоритме, вы должны с ним работать.
Другая цитата, от Френсиса Салливана, говорит: "Великие алгоритмы - есть поэма вычисления". 
Так же, как и стих, они могут быть краткими, неуловимыми, насыщенными и даже
непостижимыми. Но единожды постигнутые, они проливают совершенно новый свет на некоторые аспекты
вычисления. Алгоритмы интересны для интеллектуальной стимуляции.
Многие люди изучают алгоритмы, потому что понимание хороших
эффективных алгоритмов и структур данных необходимо,
чтобы быть профессиональным программистом. Линус Торвальдс, создавший Линукс, говорит,
что отличить плохого программиста от хорошего можно по тому, что он считает
более важным: код или структуру данных. Плохой программист беспокоится
о коде, тогда как хороший - о структурах данных
и их взаимосвязи. Я бы добавил алгоритмы, которые их обрабатывают. 
Никлаус Вирт - другой пионер информатики, написал известную книгу под названием
"Алгоритмы + Структуры Данных = Программы". Другой причиной изучать алгоритмы
сегодня является то, что они стали общим языком для понимания природы вещей.
Алгоритмы - это расчетные модели и алгоритмические модели заменяют
математические модели в научном исследовании. В двадцатом веке ученые
разработали математические модели в попытке понять природное явление.
Вскоре стало понятно, что они сложны для решения.
Было сложно создать решения, способные проверить предположения относительно природного
явления. Так что, всё больше людей в наше время разрабатывают расчетные
модели, в которых пытаются имитировать природные явления,
чтобы лучше их понять. Алгоритмы играют крайне важную роль в этом
процессе. И мы увидим несколько примеров этого в курсе.
Ещё одна причина изучать алгоритмы — если вы знаете, как эффективно использовать
алгоритмы и структуры данных, то с большей вероятностью пройдете собеседование
на техническую должность. Существует целый ряд причин
изучать алгоритмы. Их влияние широко,
они существуют издавна и представляют новые возможности, позволяют решать
задачи, которые нельзя решить иначе, вы можете использовать их
для интеллектуальной стимуляции, чтобы стать опытным программистом. Они могут 
открыть секреты жизни во Вселенной, они отлично подходят для развлечения и пользы. 
Программист может спросить: "Зачем изучать что-то еще?" Есть множество причин
изучать другие вещи, но нет ни одной причины не изучать
алгоритмы. Итак, для этого курса у нас есть два источника, о которых я хочу
поговорить и удостовериться, что люди знакомы с ними перед погружением
в содержимое. Это модель публикаций, которую мы разработали с Кевином Уэйном
и использовали многие годы. Это эффективный способ
поддержки подобных лекций. В качестве опции,
для курса есть учебник. Это традиционный учебник,
который подробно описывает темы курса и другие темы,
которые не вошли в лекции. Помимо учебника существует
бесплатный онлайн-материал. В нем содержатся слайды лекций, а также код, упражнения
и большой объем информации. Возможно, в десять раз больше, чем в книге,
включая краткое содержание. Вы часто будете пользоваться
онлайн-материалами. Люди часто спрашивают о минимальных 
требованиях. Мы предполагаем, что люди, которые проходят данный курс, знают как писать
программы, знают основы циклов, массивов, функций. Они имеют некоторое представление
об объектно-ориентированном программировании и рекурсии. Мы используем язык программирования Java,
но не зацикливаемся на нем, а используем как наглядный язык.
Будет немного не слишком продвинутой математики. Материалы, которые необходимо знать
для прохождения курса, расположены в разделах 1.1 и 1.2 книги. И в учебнике, и в онлайн-материалах.
Для более подробного погружения есть полноценный учебник
"Введение в программирование на Java: междисциплинарный подход".
Не забывайте про онлайн-материалы и учебник. Вы должны уметь писать программы.
Для подготовки напишите программу на Java
с использованием модели программирования, как описано в материалах.
Мы предоставим более детальную информацию, когда приступим к заданиям.
Вы можете использовать ту среду программирования, к которой привыкли,
или загрузить нашу. На сайте есть инструкции, как это сделать.