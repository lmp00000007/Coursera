好，第一步就是要能观察程序的运行时间 我们将看到，相对很多科学领域，算法分析做观察要更容易 下面的实例中我们将使用 所谓的3-SUM问题。这个问题很容易描述。如果有N个不同的整数 多少组三整数组合的和为0？如8ints.txt这个文件中 有8个整数。其中4组三整数组合的和为0。30 -40和10，30、-20、-10等等。所以我们的目标是编写一个程序，它能 对任意输入，任意N个整数的集合，计算这个值。实际上，这是 与计算几何中很多问题深度相关的极其重要的计算问题 计算几何是计算机科学的一个分支，它 包含与图形、电影以及各种
几何模型相关的算法和科学基础 这实际上是一个很重要的现实问题 这个问题的代码很好写，不需要费很大劲就能在一页之内写下这个程序 它有一个静态方法count，将一个 整数数组作为参数。这是整数的个数 是数组的长度。变量count开始等于0 然后是一个三重for循环，检查每个三整数组合 i、j、k，i 从 1 到 N j 从 i+1 到 N，k 从 j+1 到 N，这样每个三整数组合只出现一次 然后如果 a[i] + a[j] + a[k] = 0，count增加1。好，三重 for循环之后，返回count值。下面是main方法，这个简单的类中 只是读入所有的整数，然后输出count值。所以 这就是一个正确的求解3-SUM问题的暴力算法 现在我们感兴趣的是用关于N的函数表示算法需要的时间 那么，有一种给程序计时的方法就是看表。如果你有 秒表、也可以看钟表、手机，或者随便什么你能用的东西 你喜欢的话就可以用它们计时。另一种方法，Java在它的 标准库中就有一个秒表类，可以计算用掉的时间 无论运行什么程序，如果它可以很容易改变输入的 大小，很自然应该用越来越大的输入来运行它。对于8个 整数这个程序不需要花太多时间，1000个整数需要半秒钟 2000个需要花更多时间，3.7秒。再运行一次，还是3.7秒 4000呢，所以每次我们将输入的大小翻倍，程序一定会 运行更久。而实际上，如果程序员 养成这样测试程序的习惯，就可以 相当方便和快速地评估程序什么时候结束 当你在等它运行的时候往往就知道了 程序对于4000的输入需要30秒，那么我们就能 在程序运行结束之前算出来8000的输入需要多久，你马上就知道怎么做了 现在我不打算等程序结束了，你可以好好考虑一下 好，这就是经验分析法。用不同大小的输入运行程序 并测量运行时间。现在假如这是某个科学问题 我们在对自然界中的某个事物计数。蚁丘中蚂蚁的个数 之类的，我们只有几个数据点 为了理解怎么回事，我们画一个图象，我们感兴趣的运行时间作为 Y轴，问题大小作为X轴。得到这样一条曲线 实际上很多这种类型的问题科学家们是这么做的 是用双对数坐标。如果你用双对数坐标 通常你会得到一条直线。这条直线的斜率就是 关键。这个例子中，直线的斜率是3 你可以做一个回归，拟合出一条经过数据点的直线 做一些数学计算不难证明 如果你得到一条直线，斜率为B，那么函数正比于N^B 这叫幂定律。对于很多科学问题 包括大多数算法都是成立的。这里是一些数学计算 因为我们用了以二为底的双对数坐标作图，直线就是 lg(T(N)) = b lg N + c。我们有了b和c的经验值，如果 如果将等式两边同时取2的幂，就得到T(N) = 常数乘以N^B。所以从观察中我们就得到了程序运行时间 相当不错的模型。做一些数学计算，我们就能知道 运行时间看起来大约是10^-10 × N^3秒 我们可以用这个假设继续做预测。只要代入 不同的N值，计算出16000的输入需要400秒 400秒是挺长的时间，但是现在我们可以运行这个实验 我们就很确定需要的运行时间很接近那个408秒了 现在我们能对32000或者其他我们感兴趣的做预测了 这个模型帮助我们在不需要花时间运行实验的前提下 做一些预测。实际上，这个情形中存在幂定律 再说一次，绝大多数计算机算法的运行时间满足 幂定律，我们需要做的就是想之前一样每次将输入的大小翻倍 然后计算出N和2N运行时间的比率 如果你这么做了，这个比率会收敛到一个常数。实际上比率的对数 会收敛到N的指数 做这个表格你只需要做一点点计算，但这是一种非常简单而且 自然的预测运行时间的方式。这里是我之前说过的 通过这种方式我们可以很快估计出幂定律关系中的B 怎么估计a呢？我们可以运行程序然后求出a。所以一旦我们求出 指数是3，在某个大N上运行程序，我们得出的模型和 我们通过作图得到的模型是很接近的。几乎是完全相同的 假设，我们只需要每次将N翻倍运行程序就能得到它 为了理解程序运行的时间计算机中有很多的因素 关键因素和计算机的型号是无关的 就是你使用的算法以及数据 它们实际上决定了幂定律中的指数。有很多 系统相关的因素。你的硬件配置如何？你的计算机是快 还是慢？软件环境如何？计算机系统中发生了什么？ 所有这些因素决定了幂定律中的a 现代计算机系统中硬件和软件是非常复杂的 有时很难获得非常精确的测量。但是另一方面 我们不像其他科学中需要牺牲动物或者像另一颗行星发射探测器 我们只需要运行大量的实验，然后就能 处理这些因素